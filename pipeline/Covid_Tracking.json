{
	"name": "Covid_Tracking",
	"properties": {
		"description": "Covid Tracking (Cases/Deaths): https://covidtracking.com/api/v1/states/daily.json",
		"activities": [
			{
				"name": "To Raw Partition",
				"description": "https://covidtracking.com/api/v1/states/daily.json",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Github_dataset",
						"type": "DatasetReference",
						"parameters": {
							"relativeUrl": {
								"value": "@pipeline().parameters.sourceRelativeUrl",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "csv_dataset1",
						"type": "DatasetReference",
						"parameters": {
							"directory": {
								"value": "@concat(pipeline().parameters.rawBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
								"type": "Expression"
							},
							"file": {
								"value": "@concat(pipeline().parameters.sourceFilename,'_',pipeline().RunId,'.csv')",
								"type": "Expression"
							},
							"container": {
								"value": "@pipeline().parameters.blobContainer",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "To Raw Overwrite",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Github_dataset",
						"type": "DatasetReference",
						"parameters": {
							"relativeUrl": {
								"value": "@pipeline().parameters.sourceRelativeUrl",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "csv_dataset1",
						"type": "DatasetReference",
						"parameters": {
							"directory": {
								"value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
								"type": "Expression"
							},
							"file": {
								"value": "@pipeline().parameters.sourceFilename",
								"type": "Expression"
							},
							"container": {
								"value": "@pipeline().parameters.blobContainer",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Reformat Columns",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "To Raw Partition",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "To Raw Overwrite",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "CovidTracking_transform",
						"type": "DataFlowReference",
						"parameters": {
							"filename": {
								"value": "'@{pipeline().parameters.filename}'",
								"type": "Expression"
							},
							"runid": {
								"value": "'@{pipeline().RunId}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"sourceCSV": {
								"directory": {
									"value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
									"type": "Expression"
								},
								"file": {
									"value": "@pipeline().parameters.sourceFilename",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.blobContainer",
									"type": "Expression"
								}
							},
							"SinkLatestCSV": {
								"directory": {
									"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
									"type": "Expression"
								},
								"file": {
									"value": "@concat(pipeline().parameters.filename,'.csv')",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.blobContainer",
									"type": "Expression"
								}
							},
							"sinkLatestJsonl": {
								"container": {
									"value": "@pipeline().parameters.blobContainer",
									"type": "Expression"
								},
								"directory": {
									"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
									"type": "Expression"
								},
								"file": {
									"value": "@concat(pipeline().parameters.filename,'.jsonl')",
									"type": "Expression"
								}
							},
							"SinkCSV": {
								"directory": {
									"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
									"type": "Expression"
								},
								"file": "specified in data flow",
								"container": {
									"value": "@pipeline().parameters.blobContainer",
									"type": "Expression"
								}
							},
							"sinkJsonl": {
								"container": {
									"value": "@pipeline().parameters.blobContainer",
									"type": "Expression"
								},
								"directory": {
									"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
									"type": "Expression"
								},
								"file": "specified in data flow"
							},
							"sinkLatestParquet": {
								"container": {
									"value": "@pipeline().parameters.blobContainer",
									"type": "Expression"
								},
								"directory": {
									"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
									"type": "Expression"
								},
								"file": "specified in data flow"
							},
							"sinkParquet": {
								"container": {
									"value": "@pipeline().parameters.blobContainer",
									"type": "Expression"
								},
								"directory": {
									"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
									"type": "Expression"
								},
								"file": "specified in data flow"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "JSONL to JSON LATEST",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Reformat Columns",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "json_dataset1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.blobContainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
								"type": "Expression"
							},
							"file": {
								"value": "@concat(pipeline().parameters.filename,'.jsonl')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "json_dataset1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.blobContainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
								"type": "Expression"
							},
							"file": {
								"value": "@concat(pipeline().parameters.filename,'.json')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "JSONL to JSON",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Reformat Columns",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "json_dataset1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.blobContainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
								"type": "Expression"
							},
							"file": {
								"value": "@concat(pipeline().parameters.filename,'.jsonl')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "json_dataset1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.blobContainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
								"type": "Expression"
							},
							"file": {
								"value": "@concat(pipeline().parameters.filename,'_',pipeline().RunId,'.json')",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"sourceFilename": {
				"type": "string",
				"defaultValue": "states_daily_4pm_et.csv"
			},
			"sourceRelativeUrl": {
				"type": "string",
				"defaultValue": "COVID19Tracking/covid-tracking-data/master/data/states_daily_4pm_et.csv"
			},
			"blobContainer": {
				"type": "string",
				"defaultValue": "public"
			},
			"rawBlobDirectory": {
				"type": "string",
				"defaultValue": "raw/covid-19/covid_tracking"
			},
			"curatedBlobDirectory": {
				"type": "string",
				"defaultValue": "curated/covid-19/covid_tracking"
			},
			"filename": {
				"type": "string",
				"defaultValue": "covid_tracking"
			}
		},
		"folder": {
			"name": "Case Data"
		},
		"annotations": [
			"covidtracking"
		]
	}
}